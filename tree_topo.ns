set ns [new Simulator]
source tb_compat.tcl

set opt(SERVER_COUNT) 8
set edgeNum [expr $opt(SERVER_COUNT)/2]
set aggNum [expr $edgeNum/2]
set allNum [expr 2*($edgeNum+$aggNum+1+$opt(SERVER_COUNT))+2]
set aggIndex 0
set edgeIndex 0
set serverIndex 0
set ipIndex 0
set ips {}
for {set t 3} {$t < $allNum} {incr t} {
   lappend ips "10.1.66.$t"
}
# set ctrl [$ns node]
# tb-set-node-os $ctrl Ubuntu12-64-OVS
set cores0 [$ns node]
tb-set-node-os $cores0 Ubuntu12-64-OVS
tb-set-node-startcmd $cores0 "sudo python ~/transiver/mk_ovs/mk_ovs.py -c"
# $ns duplex-link $cores0 $ctrl 40Mb 10ms DropTail
for {set i 0} {$i < $aggNum} {incr i} {
   set aggs($i) [$ns node]
   tb-set-node-os $aggs($i) Ubuntu12-64-OVS
   $ns duplex-link $aggs($i) $cores0 40Mb 15ms DropTail
   # $ns duplex-link $aggs($i) $ctrl 40Mb 10ms DropTail
   for {set j 0} {$j < 2} {incr j} {
      set edges($edgeIndex) [$ns node]
      tb-set-node-os $edges($edgeIndex) Ubuntu12-64-OVS
      tb-set-node-startcmd $edges($edgeIndex) "sudo python ~/transiver/mk_ovs/mk_ovs.py"
      $ns duplex-link $edges($edgeIndex) $aggs($i) 20Mb 15ms DropTail
	  # $ns duplex-link $edges($edgeIndex) $ctrl 40Mb 10ms DropTail
	  for {set k 0} {$k < 2} {incr k} {
	     set servers($serverIndex) [$ns node]
         tb-set-node-os $servers($serverIndex) Ubuntu12-64-OVS
         $ns duplex-link $servers($serverIndex) $edges($edgeIndex) 10Mb 15ms DropTail
		 # tb-set-ip-interface $servers($serverIndex) $edges($edgeIndex) [lindex $ips $ipIndex]
		 tb-set-node-startcmd $servers($serverIndex) "sudo python ~/transiver/mk_ovs/mk_ovs.py -s [lindex $ips $ipIndex]"
		 incr ipIndex
		 incr serverIndex
	  }
	  incr edgeIndex
   }
}

$ns rtproto Manual
$ns run
